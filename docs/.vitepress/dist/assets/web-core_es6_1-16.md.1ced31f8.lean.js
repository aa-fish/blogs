import{_ as o,C as e,o as t,c,k as s,a as n,H as p,Q as a}from"./chunks/framework.5b0c684c.js";const k=JSON.parse('{"title":"Generator[生成器]","description":"","frontmatter":{},"headers":[],"relativePath":"web-core/es6/1-16.md","filePath":"web-core/es6/1-16.md","lastUpdated":1729031503000}'),r={name:"web-core/es6/1-16.md"},y=a("",8),E=a("",13),i={class:"tip custom-block"},d=s("p",{class:"custom-block-title"},"注意",-1),F=a("",1),u=a("",16);function g(A,C,D,h,v,B){const l=e("lines");return t(),c("div",null,[y,s("blockquote",null,[s("p",null,[n("③、如果 next() 方法带有参数，那么它会恢复生成器函数的执行，并用参数替换暂停执行的 yield 表达式。"),p(l,{text:"（此处要注意）"})])]),E,s("div",i,[d,s("p",null,[n("由于next方法的参数表示上一个yield表达式的返回值，所以在"),p(l,{text:"第一次使用next方法时，传递参数是无效的"}),n("。V8 引擎直接忽略第一次使用next方法时的参数，"),p(l,{text:"只有从第二次使用next方法开始，参数才是有效的"}),n("。从语义上讲，第一个next方法用来启动遍历器对象，所以不用带有参数。")]),F]),u])}const x=o(r,[["render",g]]);export{k as __pageData,x as default};
