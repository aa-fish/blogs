import{_ as e,o as t,c as a,Q as r}from"./chunks/framework.5b0c684c.js";const _=JSON.parse('{"title":"TubeGeometry","description":"","frontmatter":{},"headers":[],"relativePath":"3DVisualization/threejs/TubeGeometry.md","filePath":"3DVisualization/threejs/TubeGeometry.md","lastUpdated":1729031503000}'),o={name:"3DVisualization/threejs/TubeGeometry.md"},l=r('<h1 id="tubegeometry" tabindex="-1">TubeGeometry <a class="header-anchor" href="#tubegeometry" aria-label="Permalink to &quot;TubeGeometry&quot;">​</a></h1><p>曲线路径管道</p><p><strong>TubeGeometry(path, tubularSegments, radius, radiusSegments, closed)</strong></p><ul><li>path — Curve - 一个由基类Curve继承而来的3D路径。 Default is a quadratic bezier curve.</li><li>tubularSegments — Integer - 组成这一管道的分段数，默认值为64。</li><li>radius — Float - 管道的半径，默认值为1。</li><li>radialSegments — Integer - 管道横截面的分段数目，默认值为8。</li><li>closed — Boolean 管道的两端是否闭合，默认值为false。</li></ul><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p>共有属性请参见其基类BufferGeometry。</p><ul><li><p>.parameters : Object</p><blockquote><p>一个包含着构造函数中每个参数的对象。在对象实例化之后，对该属性的任何修改都不会改变这个几何体。</p></blockquote></li><li><p>.tangents : Array</p><blockquote><p>一个Vector3切线数组。</p></blockquote></li><li><p>.normals : Array</p><blockquote><p>一个Vector3法线数组。</p></blockquote></li><li><p>.binormals : Array</p><blockquote><p>一个Vector3次法线数组。</p></blockquote></li></ul><h1 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h1><p>共有方法请参见其基类BufferGeometry。</p>',9),i=[l];function s(u,n,c,p,d,m){return t(),a("div",null,i)}const h=e(o,[["render",s]]);export{_ as __pageData,h as default};
