import{_ as t,o,c as e,Q as a}from"./chunks/framework.5b0c684c.js";const f=JSON.parse('{"title":"Boolean","description":"","frontmatter":{},"headers":[],"relativePath":"web-core/base/1-2.md","filePath":"web-core/base/1-2.md","lastUpdated":1729031503000}'),l={name:"web-core/base/1-2.md"},r=a('<h1 id="boolean" tabindex="-1">Boolean <a class="header-anchor" href="#boolean" aria-label="Permalink to &quot;Boolean&quot;">​</a></h1><h2 id="原始值转布尔" tabindex="-1">原始值转布尔 <a class="header-anchor" href="#原始值转布尔" aria-label="Permalink to &quot;原始值转布尔&quot;">​</a></h2><p>我们使用 <code>Boolean</code> 函数将类型转换成布尔类型。</p><p>6 种值可以被转换成 false（如下表），其他都会被转换成 true。</p><table><thead><tr><th>参数类型</th><th>0</th><th>&quot; &quot;</th><th>NaN</th><th>Null</th><th>false</th><th>Undefined</th></tr></thead><tbody><tr><td>结果</td><td>false</td><td>false</td><td>false</td><td>false</td><td>false</td><td>false</td></tr></tbody></table><p>实例方法</p><h2 id="boolean-prototype-tostring" tabindex="-1">Boolean.prototype.toString() <a class="header-anchor" href="#boolean-prototype-tostring" aria-label="Permalink to &quot;Boolean.prototype.toString()&quot;">​</a></h2><ul><li><strong>描述</strong>： <ol><li>Boolean 对象覆盖了 Object 对象的 toString 方法。</li><li>并没有继承 Object.prototype.toString()。</li><li>对于布尔对象，toString 方法返回一个表示该对象的字符串。</li><li>当一个 Boolean 对象作为文本值或进行字符串连接时，JavaScript 会自动调用其 toString 方法。</li></ol></li></ul><h2 id="boolean-prototype-valueof" tabindex="-1">Boolean.prototype.valueOf() <a class="header-anchor" href="#boolean-prototype-valueof" aria-label="Permalink to &quot;Boolean.prototype.valueOf()&quot;">​</a></h2><ul><li><strong>描述</strong>： <ol><li>Boolean的 valueOf 方法返回一个Boolean对象或Boolean字面量的原始值作为布尔数据类型。</li><li>该方法通常在 JavaScript 内部调用，而不是在代码中显式调用。</li></ol></li></ul>',10),n=[r];function i(d,s,h,p,c,_){return o(),e("div",null,n)}const u=t(l,[["render",i]]);export{f as __pageData,u as default};
