import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.5b0c684c.js";const m=JSON.parse('{"title":"空间复杂度、时间复杂度","description":"","frontmatter":{},"headers":[],"relativePath":"data-structure/2-2.md","filePath":"data-structure/2-2.md","lastUpdated":1729031503000}'),o={name:"data-structure/2-2.md"},s=r('<h1 id="空间复杂度、时间复杂度" tabindex="-1">空间复杂度、时间复杂度 <a class="header-anchor" href="#空间复杂度、时间复杂度" aria-label="Permalink to &quot;空间复杂度、时间复杂度&quot;">​</a></h1><h2 id="空间复杂度-space" tabindex="-1">空间复杂度(Space) <a class="header-anchor" href="#空间复杂度-space" aria-label="Permalink to &quot;空间复杂度(Space)&quot;">​</a></h2><p><code>空间复杂度S(n)----根据算法写成的程序在执行时占用存储单元的长度。</code>这个长度往往与输入数据的规模有关。空间复杂度过高的算法可能导致使用的内存超限，造成程序非正常中断。</p><h2 id="时间复杂度-time" tabindex="-1">时间复杂度(Time) <a class="header-anchor" href="#时间复杂度-time" aria-label="Permalink to &quot;时间复杂度(Time)&quot;">​</a></h2><p><code>时间复杂度T(n)----根据算法写成的程序在执行时耗费时间的长度。</code>这个长度往往也与输入数据的规模有关。时间复杂度过高的低效算法可能导致我们在有生之年都等不到运行结果。</p><br><br><p><strong>分析算法的效率时，我们经常关注下面两种情况</strong></p><ul><li>最坏情况的复杂度 T<sub>worst</sub>(n)</li><li>平均复杂度 T<sub>avg</sub>(n)</li></ul>',9),c=[s];function i(n,d,l,_,u,p){return e(),t("div",null,c)}const b=a(o,[["render",i]]);export{m as __pageData,b as default};
