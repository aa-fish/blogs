import{_ as n,C as p,o as t,c as r,k as s,a as l,H as o,Q as e}from"./chunks/framework.5b0c684c.js";const v=JSON.parse('{"title":"模块化的规范","description":"","frontmatter":{},"headers":[],"relativePath":"tools/modular/1-1.md","filePath":"tools/modular/1-1.md","lastUpdated":1729031503000}'),c={name:"tools/modular/1-1.md"},i=e("",2),d=s("h2",{id:"commonjs",tabindex:"-1"},[l("CommonJs "),s("a",{class:"header-anchor",href:"#commonjs","aria-label":'Permalink to "CommonJs"'},"​")],-1),u=s("h3",{id:"commonjs规范特点",tabindex:"-1"},[l("CommonJs规范特点 "),s("a",{class:"header-anchor",href:"#commonjs规范特点","aria-label":'Permalink to "CommonJs规范特点"'},"​")],-1),E=s("code",null,"服务器端",-1),y=s("code",null,"Node.js",-1),m=s("li",null,[s("p",null,"模块可以多次加载，但只在首次加载时运行（单例模式），然后运行结果就被缓存了，以后再加载，就直接读取缓存结果。要想让模块再次运行，必须清除缓存。（所以代码文件有改动的话，是需要重新启动程序的）")],-1),h=e("",5),_=s("code",null,"Asynchronous Module Definition",-1),b=s("li",null,[s("p",null,"AMD 规范的实现主要是 RequireJS，它采用异步方式加载模块，模块的加载不影响它后面语句的运行，可以并行加载多个模块。")],-1),C=s("li",null,[s("p",null,[l("用"),s("code",null,"require.config()"),l("指定引用路径等，用"),s("code",null,"define()"),l("定义模块，用"),s("code",null,"require()"),l("加载模块。")])],-1),x=e("",14),D=e("",17);function F(S,f,q,M,A,k){const a=p("lines");return t(),r("div",null,[i,s("p",null,[l("为了避免人为编排模块（依赖关系问题），逐步出现了一系列的工具库（"),o(a,{text:"模块化规范+模块化加载器"}),l("）。不用再手动在HTML中引入代码模块。")]),d,u,s("ul",null,[s("li",null,[s("p",null,[l("CommonJS 主要运行于"),E,l("，该规范指出，"),o(a,{text:"一个单独的文件就是一个模块"}),l("，其内部定义的变量是属于这个模块的，不会对外暴露，也就是说不会污染全局变量。 "),y,l("为主要实践者。")])]),s("li",null,[o(a,{text:"CommonJS 是同步加载模块"}),l("的，模块加载的顺序，按照其在代码中出现的顺序。在服务器端，文件都是保存在硬盘上，所以同步加载没有问题，但是对于浏览器端，需要将文件从服务器端请求过来，那么同步加载就不适用了，所以，CommonJS是不适用于浏览器端的。")]),m,s("li",null,[o(a,{text:"CommonJS输出是值的拷贝"}),l("（require返回的值是被输出的值的拷贝，模块内部的变化也不会影响这个值）。")])]),h,s("p",null,[l("AMD是"),_,l('的缩写，意思就是"异步模块定义"。'),o(a,{text:"适用于浏览器"}),l("。")]),s("ul",null,[b,s("li",null,[s("p",null,[l("必须提前加载所有的依赖，所有依赖这个模块的语句，都定义在一个回调函数中，等到加载完成之后，这个回调函数才会运行。（"),o(a,{text:"并且不能按需加载"}),l("）")])]),C]),x,o(a,{text:"现阶段着重遵循CommonJS、ES Module"}),D])}const J=n(c,[["render",F]]);export{v as __pageData,J as default};
