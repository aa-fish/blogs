import{_ as t,o as a,c as e,Q as d}from"./chunks/framework.5b0c684c.js";const u=JSON.parse('{"title":"正则","description":"","frontmatter":{},"headers":[],"relativePath":"web-core/base/1-8.md","filePath":"web-core/base/1-8.md","lastUpdated":1729031503000}'),s={name:"web-core/base/1-8.md"},r=d('<h1 id="正则" tabindex="-1">正则 <a class="header-anchor" href="#正则" aria-label="Permalink to &quot;正则&quot;">​</a></h1><h2 id="字符表-匹配内容" tabindex="-1">字符表（匹配内容） <a class="header-anchor" href="#字符表-匹配内容" aria-label="Permalink to &quot;字符表（匹配内容）&quot;">​</a></h2><table><thead><tr><th>元字符</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>.</td><td>匹配除换行符外的任意字符</td><td></td></tr><tr><td>\\d</td><td>匹配任意一个数字</td><td>[0-9]</td></tr><tr><td>\\D</td><td>与除了数字以外的任何一个字符匹配</td><td>[^0-9]</td></tr><tr><td>\\w</td><td>与任意一个英文字母,数字或下划线匹配</td><td>[a-zA-Z_]</td></tr><tr><td>\\W</td><td>除了字母,数字或下划线外与任何字符匹配</td><td>[^a-za-z_]</td></tr><tr><td>\\s</td><td>任意一个空白字符匹配，如空格，制表符<code>\\t</code>，换行符<code>\\n</code></td><td>[\\n\\f\\r\\t\\v]</td></tr><tr><td>\\S</td><td>除了空白符外任意一个字符匹配</td><td>[^\\n\\f\\r\\t\\v]</td></tr></tbody></table><h2 id="字符-开始结束" tabindex="-1">字符（开始结束） <a class="header-anchor" href="#字符-开始结束" aria-label="Permalink to &quot;字符（开始结束）&quot;">​</a></h2><table><thead><tr><th>边界符</th><th>说明</th></tr></thead><tbody><tr><td>^</td><td>匹配字符串的开始位置。</td></tr><tr><td>$</td><td>匹配字符串的结束位置。</td></tr></tbody></table><h2 id="正则模式修饰符" tabindex="-1">正则模式修饰符 <a class="header-anchor" href="#正则模式修饰符" aria-label="Permalink to &quot;正则模式修饰符&quot;">​</a></h2><table><thead><tr><th>修饰符</th><th>说明</th></tr></thead><tbody><tr><td>i</td><td>不区分大小写字母的匹配</td></tr><tr><td>g</td><td>全局搜索所有匹配内容</td></tr><tr><td>m</td><td>使边界字符 ^ 和 $ 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。 （主要针对 ^ 和 $ ）</td></tr><tr><td>s</td><td>视为单行忽略换行符，使用<code>.</code> 可以匹配所有字符。 （<code>.</code>是除换行符外的所有字符）</td></tr><tr><td>y</td><td>从 <code>regexp.lastIndex</code> 开始匹配</td></tr><tr><td>u</td><td>正确处理四个字符的 UTF-16 编码</td></tr></tbody></table><h2 id="限定符" tabindex="-1">限定符 <a class="header-anchor" href="#限定符" aria-label="Permalink to &quot;限定符&quot;">​</a></h2><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td><code>?</code></td><td>重复零次或一次</td></tr><tr><td><code>*</code></td><td>重复零次或更多次</td></tr><tr><td><code>+</code></td><td>重复一次或更多次</td></tr><tr><td><code>{n}</code></td><td>重复 n 次</td></tr><tr><td><code>{n,} </code></td><td>重复 n 次或更多次</td></tr><tr><td><code>{n,m}</code></td><td>重复 n 到 m 次</td></tr></tbody></table><h3 id="禁止贪婪" tabindex="-1">禁止贪婪 <a class="header-anchor" href="#禁止贪婪" aria-label="Permalink to &quot;禁止贪婪&quot;">​</a></h3><p>正则表达式在进行重复匹配时，默认是贪婪匹配模式，会尽量匹配更多内容，可以通过<code>?</code>进行修饰来禁止重复匹配。</p><table><thead><tr><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>??</td><td>重复 0 次或 1 次，但尽可能少重复</td></tr><tr><td>*?</td><td>重复 0 次或多次，但尽可能少重复</td></tr><tr><td>+?</td><td>重复 1 次或更多次，但尽可能少重复</td></tr><tr><td>{n,m}?</td><td>重复 n 到 m 次，但尽可能少重复</td></tr><tr><td>{n,}?</td><td>重复 n 次以上，但尽可能少重复</td></tr></tbody></table><h3 id="正则中-、-、" tabindex="-1">正则中 <code>()</code>、 <code>[]</code>、<code>{}</code> <a class="header-anchor" href="#正则中-、-、" aria-label="Permalink to &quot;正则中 `()`、 `[]`、`{}`&quot;">​</a></h3><p>^ 在 <code>()</code>、 <code>[]</code>中表示否的意思。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// 所有数字</span></span>\n<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// 除数字外的字符</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// 所有数字</span></span>\n<span class="line"><span style="color:#24292E;">[</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// 除数字外的字符</span></span></code></pre></div><table><thead><tr><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>()</td><td>匹配组，后面可以继续复用（\\1，\\2.....），非捕获组(?:XXX)，命名捕获组(?&lt;名称&gt;)</td></tr><tr><td>[]</td><td>匹配中括号里出现的字符</td></tr><tr><td>{}</td><td>限定符</td></tr></tbody></table><h2 id="匹配所有内容" tabindex="-1">匹配所有内容 <a class="header-anchor" href="#匹配所有内容" aria-label="Permalink to &quot;匹配所有内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">.</span><span style="color:#F97583;">*</span><span style="color:#9ECBFF;">/</span></span>\n<span class="line"><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">[\\s\\S]</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">/</span></span>\n<span class="line"><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">[\\d\\D]</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">/</span><span style="color:#005CC5;">.</span><span style="color:#D73A49;">*</span><span style="color:#032F62;">/</span></span>\n<span class="line"><span style="color:#032F62;">/</span><span style="color:#005CC5;">[\\s\\S]</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">/</span></span>\n<span class="line"><span style="color:#032F62;">/</span><span style="color:#005CC5;">[\\d\\D]</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">/</span></span></code></pre></div><h2 id="正则断言" tabindex="-1">正则断言 <a class="header-anchor" href="#正则断言" aria-label="Permalink to &quot;正则断言&quot;">​</a></h2><table><thead><tr><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>?=xx</td><td>正向零宽匹配：匹配字符位置后的条件</td></tr><tr><td>?!xx</td><td>正向零宽不匹配：匹配字符位置后的条件(非)</td></tr><tr><td>?&lt;=xx</td><td>负向零宽匹配: 匹配字符位置前的条件</td></tr><tr><td>?&lt;!xx</td><td>负向零宽不匹配：匹配字符位置前的条件(非)</td></tr></tbody></table><h2 id="字符串方法" tabindex="-1">字符串方法 <a class="header-anchor" href="#字符串方法" aria-label="Permalink to &quot;字符串方法&quot;">​</a></h2><h3 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h3><h3 id="replaceall" tabindex="-1">replaceAll <a class="header-anchor" href="#replaceall" aria-label="Permalink to &quot;replaceAll&quot;">​</a></h3><h3 id="search" tabindex="-1">search <a class="header-anchor" href="#search" aria-label="Permalink to &quot;search&quot;">​</a></h3><h3 id="split" tabindex="-1">split <a class="header-anchor" href="#split" aria-label="Permalink to &quot;split&quot;">​</a></h3><h3 id="match" tabindex="-1">match <a class="header-anchor" href="#match" aria-label="Permalink to &quot;match&quot;">​</a></h3><h3 id="matchall" tabindex="-1">matchAll <a class="header-anchor" href="#matchall" aria-label="Permalink to &quot;matchAll&quot;">​</a></h3><h2 id="正则方法" tabindex="-1">正则方法 <a class="header-anchor" href="#正则方法" aria-label="Permalink to &quot;正则方法&quot;">​</a></h2><h3 id="test" tabindex="-1">test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;test&quot;">​</a></h3><h3 id="exec" tabindex="-1">exec <a class="header-anchor" href="#exec" aria-label="Permalink to &quot;exec&quot;">​</a></h3>',30),l=[r];function o(n,c,p,h,i,b){return a(),e("div",null,l)}const m=t(s,[["render",o]]);export{u as __pageData,m as default};
