import{_ as a,o as e,c as t,Q as i}from"./chunks/framework.5b0c684c.js";const f=JSON.parse('{"title":"点击劫持","description":"","frontmatter":{},"headers":[],"relativePath":"web-optimization/safe/1-4.md","filePath":"web-optimization/safe/1-4.md","lastUpdated":1729031503000}'),o={name:"web-optimization/safe/1-4.md"},r=i('<h1 id="点击劫持" tabindex="-1">点击劫持 <a class="header-anchor" href="#点击劫持" aria-label="Permalink to &quot;点击劫持&quot;">​</a></h1><p>点击劫持 (Clickjacking) 是一种欺骗攻击，攻击者在可信赖的页面上使用透明或半透明的覆盖层来欺骗用户点击他们所看到的以外的内容，例如按钮或链接。当用户点击覆盖层时，实际上点击的是攻击者精心设计的恶意内容，例如钓鱼网站或下载恶意软件的链接。（我的理解是，还可以利用各种事件执行攻击脚本）。</p><h2 id="攻击方式" tabindex="-1">攻击方式 <a class="header-anchor" href="#攻击方式" aria-label="Permalink to &quot;攻击方式&quot;">​</a></h2><ul><li>利用透明层: 攻击者在可信赖的页面上使用透明层覆盖真正的链接或按钮。当用户点击页面时，实际上点击的是透明层中的恶意内容。</li><li>利用iframe: 攻击者在可信赖的页面中嵌入一个iframe，iframe的内容是一个精心设计的恶意页面。当用户点击页面时，实际上点击的是iframe中的恶意内容。</li><li>利用CSS定位: 攻击者利用CSS定位技术将恶意内容定位在可信赖的页面之上。当用户点击页面时，实际上点击的是恶意内容。</li></ul><h2 id="防范" tabindex="-1">防范 <a class="header-anchor" href="#防范" aria-label="Permalink to &quot;防范&quot;">​</a></h2><ul><li>使用 X-Frame-Options 头: 在服务器端设置 X-Frame-Options 头，禁止其他网站嵌入本网站的页面。</li><li>使用 Content Security Policy (CSP): CSP 是一种通过配置浏览器安全机制来限制网页中可执行内容的安全技术。</li><li>避免使用透明层: 尽量避免在页面中使用透明层，如果必须使用，则需要仔细测试并确保透明层不会被攻击者利用。</li></ul>',6),l=[r];function n(s,c,_,d,h,m){return e(),t("div",null,l)}const u=a(o,[["render",n]]);export{f as __pageData,u as default};
