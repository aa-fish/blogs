import{_ as p,C as e,o as t,c,k as s,H as l,Q as n,a as o}from"./chunks/framework.5b0c684c.js";const j=JSON.parse('{"title":"类型转换","description":"","frontmatter":{},"headers":[],"relativePath":"web-core/base/2-1.md","filePath":"web-core/base/2-1.md","lastUpdated":1729031503000}'),r={name:"web-core/base/2-1.md"},y=n("",21),i={class:"info custom-block"},E=n("",4),d=s("h2",{id:"双目-运算符",tabindex:"-1"},[o("双目==运算符 "),s("a",{class:"header-anchor",href:"#双目-运算符","aria-label":'Permalink to "双目==运算符"'},"​")],-1),u={class:"info custom-block"},F=s("p",{class:"custom-block-title"},"隐士类型转换规则",-1),C=s("li",null,"相同类型的原始值直接比较。",-1),b=s("li",null,"NaN和其他任何类型比较永远返回false（包括和他自己）。",-1),A=s("li",null,"Boolean 和其他任何类型比较，Boolean 首先被转换为 Number 类型。",-1),h=s("li",null,"String和Number比较，先将String转换为Number类型。",-1),D=s("li",null,"原始类型和引用类型做比较时，引用类型会依照ToPrimitive规则转换为原始类型。",-1),g=n("",1),f=s("h2",{id:"双目关系操作符-、-、-、",tabindex:"-1"},[o("双目关系操作符（>、<、>=、<=） "),s("a",{class:"header-anchor",href:"#双目关系操作符-、-、-、","aria-label":'Permalink to "双目关系操作符（>、<、>=、<=）"'},"​")],-1),B=s("p",null,"具有数字比较和字符串比较两种意义",-1),N=s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"隐士类型转化规则"),s("ul",null,[s("li",null,"一侧为Number类型，则转为Number类型比较。"),s("li",null,"一侧为Boolean类型，则转为Number类型比较。"),s("li",null,"两侧均为String时，则比较字符串的字符编码值。"),s("li",null,"其他情况执行ToPrimitive，再进行上面操作。")])],-1);function m(v,_,x,k,q,S){const a=e("lines");return t(),c("div",null,[y,s("div",i,[E,l(a,{text:"注意：当 { } 在 运算符左侧时被解析为一个空的代码块"})]),d,s("div",u,[F,s("ul",null,[C,b,s("li",null,[l(a,{text:"null == undefined比较结果是true，并且也与其自身相等。和其他所有值都不相等"})]),A,h,D]),g]),f,B,N])}const P=p(r,[["render",m]]);export{j as __pageData,P as default};
