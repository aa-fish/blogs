import{_ as s,o,c as a,Q as t}from"./chunks/framework.5b0c684c.js";const i="/blogs/assets/3DVisualization_graphics_5_1-2-3.9d6b59ce.png",p="/blogs/assets/3DVisualization_graphics_5_1-2-1.86fee52b.png",e="/blogs/assets/3DVisualization_graphics_5_1-2-2.3f751344.png",l="/blogs/assets/3DVisualization_graphics_5_1-2-5.d97bb45c.png",c="/blogs/assets/3DVisualization_graphics_5_1-2-6.542aeeb2.png",r="/blogs/assets/3DVisualization_graphics_5_1-2-7.70cd7fd2.png",_="/blogs/assets/3DVisualization_graphics_5_1-2-8.d5fcef13.png",n="/blogs/assets/3DVisualization_graphics_5_1-2-9.10e35dd1.png",g="/blogs/assets/3DVisualization_graphics_5_1-2-10.e3572cc2.png",u="/blogs/assets/3DVisualization_graphics_5_1-2-11.017201ce.png",b="/blogs/assets/3DVisualization_graphics_5_1-2-12.27901be8.png",h="/blogs/assets/3DVisualization_graphics_5_1-2-13.b366301e.png",d="/blogs/assets/3DVisualization_graphics_5_1-2-14.80e2b924.png",m="/blogs/assets/3DVisualization_graphics_5_1-2-15.ecf9348f.png",q="/blogs/assets/3DVisualization_graphics_5_1-2-16.635d592a.png",k="/blogs/assets/3DVisualization_graphics_5_1-2-17.851b6018.png",f="/blogs/assets/3DVisualization_graphics_5_1-2-18.2b36060a.png",D="/blogs/assets/3DVisualization_graphics_5_1-2-19.e9b3fdf7.png",V="/blogs/assets/3DVisualization_graphics_5_1-2-20.41f51c25.png",z="/blogs/assets/3DVisualization_graphics_5_1-2-21.698c2045.png",P="/blogs/assets/3DVisualization_graphics_5_1-2-22.83e01ae4.png",x="/blogs/assets/3DVisualization_graphics_5_1-2-23.9f66dc3d.png",J=JSON.parse('{"title":"几何的面","description":"","frontmatter":{},"headers":[],"relativePath":"3DVisualization/graphics/5-1-2.md","filePath":"3DVisualization/graphics/5-1-2.md","lastUpdated":1729031503000}'),L={name:"3DVisualization/graphics/5-1-2.md"},S=t('<h1 id="几何的面" tabindex="-1">几何的面 <a class="header-anchor" href="#几何的面" aria-label="Permalink to &quot;几何的面&quot;">​</a></h1><h2 id="曲面" tabindex="-1">曲面 <a class="header-anchor" href="#曲面" aria-label="Permalink to &quot;曲面&quot;">​</a></h2><p><img src="'+i+'" alt=""></p><p><img src="'+p+'" alt=""></p><p><img src="'+e+'" alt=""></p><blockquote><p>在u 和 v 上（或者说t1,t2）都有对应一个时间 t的贝塞尔曲线。</p></blockquote><h2 id="网格操作" tabindex="-1">网格操作 <a class="header-anchor" href="#网格操作" aria-label="Permalink to &quot;网格操作&quot;">​</a></h2><ul><li><p>网格细分 <img src="'+l+'" alt=""></p></li><li><p>网格简化 <img src="'+c+'" alt=""></p></li><li><p>网格正则化（正则化） <img src="'+r+'" alt=""></p></li></ul><blockquote><p>三角面处理成为更近似于正三角形。</p></blockquote><h2 id="三角面细分" tabindex="-1">三角面细分 <a class="header-anchor" href="#三角面细分" aria-label="Permalink to &quot;三角面细分&quot;">​</a></h2><ol><li>引入更多的三角形（增加数量）。</li><li>让这些三角形的位置发生一些变化，使得原来的物体变化更平滑。（调整位置）</li></ol><p><img src="'+_+'" alt=""> 这里讲的是<code>Loop细分</code>（Loop是一个地面，算法作者所在的地方）</p><h2 id="loop-细分" tabindex="-1">Loop 细分 <a class="header-anchor" href="#loop-细分" aria-label="Permalink to &quot;Loop 细分&quot;">​</a></h2><p><img src="'+n+'" alt=""></p><blockquote><p>如何增加三角面？连接三角形三条边上的一个点（根据算法获得），从而获得4个小的三角形。</p><p>如何调整三角形的位置（调整三角形顶点位置）？根据不同算法配新/旧顶点位置。</p></blockquote><p><strong>新顶点位置调整</strong>： <img src="'+g+'" alt=""></p><blockquote><p>两个相邻共边的三角形ABCD。</p><p>根据ABCD四个顶点的位置，利用一种加权平均获得新顶点的位置：3/8 * (A + B) + 1/8 * (C + D)。</p></blockquote><p><strong>旧顶点位置调整</strong>: <img src="'+u+'" alt=""></p><blockquote><p>定义一个n，为白点（原点）的所对应的度。</p><p>定义一个u，是与n的度对应的一个系数。</p><p>根据（1-n * u） * 当前原点位置 + u * 周围加权平均顶点的位置。</p><p>这个算法，周围点越多当前点的权重越低，周围点越少，当前点权重越高。</p></blockquote><p>Loop细分示例： <img src="'+b+'" alt=""></p><h2 id="卡特莫尔-克拉克细分-一般网格" tabindex="-1">卡特莫尔-克拉克细分（一般网格） <a class="header-anchor" href="#卡特莫尔-克拉克细分-一般网格" aria-label="Permalink to &quot;卡特莫尔-克拉克细分（一般网格）&quot;">​</a></h2><p>对于三角形网格我们使用Loop细分，对于一般网格（既有三角形也有四边形）我们可以使用卡特莫尔-克拉克细分。</p><p><img src="'+h+'" alt=""></p><blockquote><p>定义四边形、非四边形。</p><p>定义奇异点：<code>度</code>不为4的点（degree != 4）。</p></blockquote><p>定义完之后如何进行细分呢（增加网格）？</p><p><img src="'+d+'" alt=""></p><blockquote><p>在每个面上添加顶点（面的中点/重心）。</p><p>在每个边上添加中点。</p><p>连接面和边的中点。</p><p>这样我们就增加了网格。</p></blockquote><p><img src="'+m+'" alt=""></p><blockquote><p>做完第一次<code>卡特莫尔-克拉克细分</code></p></blockquote><p><img src="'+q+'" alt=""></p><blockquote><p>做完第二一次<code>卡特莫尔-克拉克细分</code></p></blockquote><p><strong>卡特莫尔-克拉克细分的性质</strong>：</p><ul><li>每一个非四边形面都会引入一个奇异点，并且在引入奇异点之后非四边形面都会消失。</li></ul><blockquote><p>简单来说，在一次<code>卡特莫尔-克拉克细分</code>之后，非四边形面会变成奇异点。</p></blockquote><ul><li>在做完第一次<code>卡特莫尔-克拉克细分</code>之后，会增加非四边形面数的奇异点个数，之后再做细分奇异点个数不再增加。</li></ul><p><strong>卡特莫尔-克拉克细分顶点位置调整</strong></p><p>计算公式-分为三种类型的点： <img src="'+k+'" alt=""></p><blockquote><p>f 面中心点</p><p>e 共边的中点</p><p>v 旧的顶点位置</p></blockquote><p>卡特莫尔-克拉克细分示例： <img src="'+f+'" alt=""></p><h2 id="网格简化" tabindex="-1">网格简化 <a class="header-anchor" href="#网格简化" aria-label="Permalink to &quot;网格简化&quot;">​</a></h2><p><img src="'+D+'" alt=""></p><p><strong>边坍缩</strong><img src="'+V+'" alt=""></p><blockquote><p>假设我们使用边的折叠来简化一个网格。</p><p>边坍缩实现起来并不容易。这里我们使用<code>二次误差度量</code>（二次是平方的意思）实现。</p></blockquote><h2 id="二次误差度量" tabindex="-1">二次误差度量 <a class="header-anchor" href="#二次误差度量" aria-label="Permalink to &quot;二次误差度量&quot;">​</a></h2><p>新顶点应最小化其与先前相关的三角形平面的平方距离之和。 <img src="'+z+'" alt=""></p><blockquote><p>找一个点，使得到达和它相关的面距离的平方和最小。</p></blockquote><p><img src="'+P+'" alt=""></p><blockquote><p>这是一个繁琐复杂的过程，需要解决很多问题。</p></blockquote><p>网格简化深入学习<a href="http://graphics.stanford.edu/courses/cs468-10-fall/LectureSlides/08_Simplification.pdf" target="_blank" rel="noreferrer">传送门</a></p><p>网格简化示例 <img src="'+x+'" alt=""></p>',50),A=[S];function T(B,C,v,$,N,E){return o(),a("div",null,A)}const O=s(L,[["render",T]]);export{J as __pageData,O as default};
