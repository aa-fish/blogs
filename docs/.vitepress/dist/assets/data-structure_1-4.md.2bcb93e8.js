import{_ as t,o as a,c as e,Q as r}from"./chunks/framework.5b0c684c.js";const m=JSON.parse('{"title":"抽象数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"data-structure/1-4.md","filePath":"data-structure/1-4.md","lastUpdated":1729031503000}'),o={name:"data-structure/1-4.md"},s=r('<h1 id="抽象数据类型" tabindex="-1">抽象数据类型 <a class="header-anchor" href="#抽象数据类型" aria-label="Permalink to &quot;抽象数据类型&quot;">​</a></h1><p><em>用于描述数据结构很好的一种方法 (Abstract Data Type)</em></p><h3 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h3><ul><li><strong>数据对象集</strong></li><li><strong>数据集合相关联的操作集</strong></li></ul><h3 id="抽象" tabindex="-1">抽象 <a class="header-anchor" href="#抽象" aria-label="Permalink to &quot;抽象&quot;">​</a></h3><p><em>描述数据类型的方法不依赖于具体实现</em></p><ul><li><strong>与存放数据的机器无关</strong></li><li><strong>与数据存储的物理结构无关</strong></li><li><strong>与实现操作的算法和编程语言均无关</strong></li></ul><p><em>只描述数据对象集和相关操作集“是什么”，并不涉及“如何做到”的问题</em></p>',8),n=[s];function l(i,c,_,d,h,u){return a(),e("div",null,n)}const f=t(o,[["render",l]]);export{m as __pageData,f as default};
