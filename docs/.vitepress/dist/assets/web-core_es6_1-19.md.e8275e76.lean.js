import{_ as l,C as p,o as e,c as t,k as a,a as s,H as o,Q as r}from"./chunks/framework.5b0c684c.js";const f=JSON.parse('{"title":"module","description":"","frontmatter":{},"headers":[],"relativePath":"web-core/es6/1-19.md","filePath":"web-core/es6/1-19.md","lastUpdated":1729031503000}'),c={name:"web-core/es6/1-19.md"},E=a("h1",{id:"module",tabindex:"-1"},[s("module "),a("a",{class:"header-anchor",href:"#module","aria-label":'Permalink to "module"'},"​")],-1),y=r("",21);function i(d,m,u,F,A,D){const n=p("lines");return e(),t("div",null,[E,a("p",null,[s("在 ES6 之前，社区制定了一些模块加载方案，"),o(n,{text:"最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器"}),s("。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，"),o(n,{text:"ES规范成为浏览器和服务器通用的模块解决方案"}),s("。")]),a("ul",null,[a("li",null,[o(n,{type:"wave",text:"ES6 模块的设计思想是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量"}),s("。CommonJS 和 AMD 模块，都只能在运行时确定这些东西。")])]),y])}const x=l(c,[["render",i]]);export{f as __pageData,x as default};
