import{_ as a,o as e,c as o,Q as t}from"./chunks/framework.5b0c684c.js";const l="/blogs/assets/linear-algebra_1-14_1.c9a3e80c.png",s="/blogs/assets/linear-algebra_1-14_2.7a67be57.png",c="/blogs/assets/linear-algebra_1-14_3.bcf80140.png",r="/blogs/assets/linear-algebra_1-14_4.d044fc59.png",q=JSON.parse('{"title":"向量的运算","description":"","frontmatter":{},"headers":[],"relativePath":"3DVisualization/linear-algebra/1-14.md","filePath":"3DVisualization/linear-algebra/1-14.md","lastUpdated":1729031503000}'),i={name:"3DVisualization/linear-algebra/1-14.md"},n=t('<h1 id="向量的运算" tabindex="-1">向量的运算 <a class="header-anchor" href="#向量的运算" aria-label="Permalink to &quot;向量的运算&quot;">​</a></h1><h2 id="向量的加法" tabindex="-1">向量的加法 <a class="header-anchor" href="#向量的加法" aria-label="Permalink to &quot;向量的加法&quot;">​</a></h2><p><img src="'+l+'" alt="图片"></p><blockquote><p>向量的加法：由向量v的终点处，做另一个向量w的起点，两个向量和就等于向量v的起点指向向量w的终点（主对角线）。</p></blockquote><blockquote><p>向量的减法：由向量v的终点处，做另一个向量-w的起点，两个向量和就等于向量v的起点指向向量-w的终点（副对角线，注意方向：向量的方向是<code>减号后面向量的终点</code>指向<code>减号前面向量的终点</code>）。</p></blockquote><h2 id="向量的数乘" tabindex="-1">向量的数乘 <a class="header-anchor" href="#向量的数乘" aria-label="Permalink to &quot;向量的数乘&quot;">​</a></h2><p><img src="'+s+'" alt="图片"></p><blockquote><p>将各个分量，放大了k 倍。</p></blockquote><blockquote><p>它的几何含义：<code>k &lt; 0 </code>时，反方向的伸缩，<code>k &gt; 0 </code>时，同方向的伸缩</p></blockquote><p>伸缩后的向量k与原向量u平行，因此可以借助数乘来定义平行:</p><blockquote><p>若u和v满足u =kv,k∈R，则称u平行于v，记作u // v。</p><p>因为零向量0和任意向量u始终有0=0u，所以零向量与任意向量平行，也可以说零向量的方向任意。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>向量的加法和数乘，称为向量基本运算。运算后的结果仍然是向量，并且<code>维度</code>也没有发生改变。</p></div><h2 id="向量的点乘-内积" tabindex="-1">向量的点乘（内积） <a class="header-anchor" href="#向量的点乘-内积" aria-label="Permalink to &quot;向量的点乘（内积）&quot;">​</a></h2><p><img src="'+c+'" alt="图片"></p><h2 id="向量的叉乘-外积" tabindex="-1">向量的叉乘（外积） <a class="header-anchor" href="#向量的叉乘-外积" aria-label="Permalink to &quot;向量的叉乘（外积）&quot;">​</a></h2><p><img src="'+r+'" alt="图片"></p>',16),p=[n];function _(d,u,b,h,k,m){return e(),o("div",null,p)}const f=a(i,[["render",_]]);export{q as __pageData,f as default};
