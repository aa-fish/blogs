import{_ as a,o as t,c as s,Q as e}from"./chunks/framework.5b0c684c.js";const r="/blogs/assets/data-structure_3-9_1.a302e12a.png",o="/blogs/assets/data-structure_3-9_2.f49378f0.png",_="/blogs/assets/data-structure_3-9_3.831a1b45.png",c="/blogs/assets/data-structure_3-9_4.dfa35cd8.png",i="/blogs/assets/data-structure_3-9_5.2210f92d.png",n="/blogs/assets/data-structure_3-9_6.d2a27a8b.png",x=JSON.parse('{"title":"什么是集合","description":"","frontmatter":{},"headers":[],"relativePath":"data-structure/3-9.md","filePath":"data-structure/3-9.md","lastUpdated":1729031503000}'),d={name:"data-structure/3-9.md"},l=e('<h1 id="什么是集合" tabindex="-1">什么是集合 <a class="header-anchor" href="#什么是集合" aria-label="Permalink to &quot;什么是集合&quot;">​</a></h1><h2 id="集合的表示" tabindex="-1">集合的表示 <a class="header-anchor" href="#集合的表示" aria-label="Permalink to &quot;集合的表示&quot;">​</a></h2><p><img src="'+r+'" alt="图片"><img src="'+o+'" alt="图片"></p><h2 id="双亲表示法实现存储【数组】" tabindex="-1">双亲表示法实现存储【数组】 <a class="header-anchor" href="#双亲表示法实现存储【数组】" aria-label="Permalink to &quot;双亲表示法实现存储【数组】&quot;">​</a></h2><p><img src="'+_+'" alt="图片"></p><h2 id="查找" tabindex="-1">查找 <a class="header-anchor" href="#查找" aria-label="Permalink to &quot;查找&quot;">​</a></h2><p><img src="'+c+'" alt="图片"></p><h2 id="集合的并运算" tabindex="-1">集合的并运算 <a class="header-anchor" href="#集合的并运算" aria-label="Permalink to &quot;集合的并运算&quot;">​</a></h2><p><img src="'+i+'" alt="图片"><img src="'+n+'" alt="图片"></p>',9),u=[l];function p(h,m,g,b,f,q){return t(),s("div",null,u)}const k=a(d,[["render",p]]);export{x as __pageData,k as default};
