import{_ as l,C as p,o,c as e,k as s,H as t,a,Q as c}from"./chunks/framework.5b0c684c.js";const q=JSON.parse('{"title":"解构赋值","description":"","frontmatter":{},"headers":[],"relativePath":"web-core/es6/1-2.md","filePath":"web-core/es6/1-2.md","lastUpdated":1729031503000}'),r={name:"web-core/es6/1-2.md"},E=s("h1",{id:"解构赋值",tabindex:"-1"},[a("解构赋值 "),s("a",{class:"header-anchor",href:"#解构赋值","aria-label":'Permalink to "解构赋值"'},"​")],-1),y=s("p",null,"解构赋值语法是一种 Javascript 表达式。可以将数组中的值或对象的属性取出，赋值给其他变量。—— MDN",-1),i=s("blockquote",null,[s("p",null,"我的理解是：解构赋值是为了便捷处理 数组、对象、函数参数的拓展。（不去专门研究对原始数据类型的解构，不钻这个牛角尖）。")],-1),F=s("p",null,"ES6 允许按照一定模式，从目标数据中提取值，对变量进行赋值，这被称为解构（Destructuring）。",-1),d=s("p",null,"如“匹配不到”变量，值就等于undefined。",-1),u=c("",53);function C(h,g,b,A,D,v){const n=p("lines");return o(),e("div",null,[E,y,i,F,s("blockquote",null,[t(n,{text:"解构赋值写法属于“模式匹配”，只要等号两边的模式相同，左边的变量就会被赋予对应的值"}),a("。"),d]),u])}const m=l(r,[["render",C]]);export{q as __pageData,m as default};
