import{_ as t,o as e,c as a,Q as o}from"./chunks/framework.5b0c684c.js";const h=JSON.parse('{"title":"排序算法概述","description":"","frontmatter":{},"headers":[],"relativePath":"data-structure/4-9.md","filePath":"data-structure/4-9.md","lastUpdated":1729031503000}'),i={name:"data-structure/4-9.md"},l=o('<h1 id="排序算法概述" tabindex="-1">排序算法概述 <a class="header-anchor" href="#排序算法概述" aria-label="Permalink to &quot;排序算法概述&quot;">​</a></h1><p>void x_Sort(ElementType A[],int N)</p><ul><li>x_Sort：x是算法的具体名称，Sort表示排序算法；</li><li>A：待排序元素存在在数组中，可以是任意类型用ElementType表示，只要能够进行排序；</li><li>N：待排序个数，正整数；</li><li>只讨论基于比较的排序（<code>&gt;</code> <code>=</code> <code>&lt;</code> 有定义）；</li><li>只讨论内部排序；（内存空间足够大的情况下，在内存中一次性完成的）；</li><li>稳定性：任意两个相等的数据，排序前后的相对位置不发生改变；（排序中有两个A，排序如果没有发生变化则）</li><li>没有一种排序是任何情况下都是表现最好的；（能写进教科书的算法都有他存在的理由）</li></ul>',3),r=[l];function c(_,d,s,n,p,u){return e(),a("div",null,r)}const f=t(i,[["render",c]]);export{h as __pageData,f as default};
